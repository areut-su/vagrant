# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'
require 'fileutils'


required_plugins = %w( vagrant-hostsupdater vagrant-vbguest ) # with remove ip from host when "halt"
#required_plugins = %w(vagrant-vbguest )

required_plugins.each do |plugin|
    exec "vagrant plugin install #{plugin}" unless Vagrant.has_plugin? plugin
end

domains = {
  site1: 'site1.test',
  site2: 'site2.test',
  }

config = {
  local: './vagrant/config/vagrant-local.yml',
  # example: './vagrant/config/vagrant-local.example.yml'
}

# copy config from example if local config not exists
FileUtils.cp config[:example], config[:local] unless File.exist?(config[:local])
# read config
options = YAML.load_file config[:local]

# check github token
if options['github_token'].nil? || options['github_token'].to_s.length != 40
  puts "You must place REAL GitHub token into configuration:\n/yii2-app-advanced/vagrant/config/vagrant-local.yml"
  exit
end
# vagrant configurate
Vagrant.configure(2) do |config|
  # select the box
  config.vm.box = 'bento/ubuntu-16.04'

  # should we ask about box updates?
  config.vm.box_check_update = options['box_check_update']

  config.vm.provider 'virtualbox' do |vb|
    # machine cpus count
    vb.cpus = options['cpus']
    # machine memory size
    vb.memory = options['memory']
    # machine name (for VirtualBox UI)
    vb.name = options['machine_name']
  end

  # machine name (for vagrant console)
  config.vm.define options['machine_name']

  # machine name (for guest machine console)
  config.vm.hostname = options['machine_name']

  # network settings
  config.vm.network 'private_network', ip: options['ip']

  # sync: folder

  #------------ переключаем метод синхронизации

#  config.vm.synced_folder './', '/app', owner: 'vagrant', group: 'vagrant',type: "rsync"
  config.vm.synced_folder './', '/app', owner: 'vagrant', group: 'vagrant'



  config.vm.synced_folder './../site1/', '/html/site1', owner: 'vagrant', group: 'vagrant'
  config.vm.synced_folder './../site2/', '/html/site2', owner: 'vagrant', group: 'vagrant'

#   config.vm.synced_folder  './../site1/', '/html/site1', type: "rsync", rsync__exclude: ["--_bd", "--fromSite"]

#----запустить для начала синхронизации  vagrant rsync-auto


  # disable folder '/vagrant' (guest machine)
  config.vm.synced_folder '.', '/vagrant', disabled: true

  # vagrant + winnfsd и vagrant reload
  #

  config.hostsupdater.remove_on_suspend = true
  config.hostsupdater.aliases            = domains.values


  # provisioners
  config.vm.provision 'shell', path: './vagrant/provision/once-as-root.sh', args: [options['timezone']]
  config.vm.provision 'shell', path: './vagrant/provision/once-as-vagrant.sh', args: [options['github_token']], privileged: false
  config.vm.provision 'shell', path: './vagrant/provision/always-as-root.sh', run: 'always'

  # post-install message (vagrant console)
  config.vm.post_up_message = "site URL: http://#{domains[:site1]}\ntest URL: http://#{domains[:site2]}"
end
